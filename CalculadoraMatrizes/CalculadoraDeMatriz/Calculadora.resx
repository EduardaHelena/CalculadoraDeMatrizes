<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>14, 15</value>
  </metadata>
  <metadata name="toolTip4.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>305, 15</value>
  </metadata>
  <metadata name="toolTip3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>208, 15</value>
  </metadata>
  <metadata name="toolTip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>111, 15</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LimparA.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/7gAOQWRvYmUAZAAAAAAB/+ERJEV4aWYAAE1NACoAAAAIAAkBEgAD
        AAAAAQABAAABGgAFAAAAAQAAAHoBGwAFAAAAAQAAAIIBKAADAAAAAQACAAABMQACAAAAHgAAAIoBMgAC
        AAAAFAAAAKgBOwACAAAACAAAALyHaQAEAAAAAQAAAMScnQABAAAAEAAAAUgAAAFYAGAAAAABAAAAYAAA
        AAEAAEFkb2JlIFBob3Rvc2hvcCBDUzYgKFdpbmRvd3MpADIwMTY6MDk6MjAgMjA6NDE6MDEAT3N3YWxk
        bwAAB5ADAAIAAAAUAAABHpAEAAIAAAAUAAABMpKRAAIAAAADODIAAJKSAAIAAAADODIAAKABAAMAAAAB
        //8AAKACAAQAAAABAAAE56ADAAQAAAABAAACBAAAAAAyMDE2OjA5OjIwIDE5OjQwOjM5ADIwMTY6MDk6
        MjAgMTk6NDA6MzkAAABPAHMAdwBhAGwAZABvAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAAaYBGwAF
        AAAAAQAAAa4BKAADAAAAAQACAAACAQAEAAAAAQAAAbYCAgAEAAAAAQAAD2YAAAAAAAAASAAAAAEAAABI
        AAAAAf/Y/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJAAYAMQAA
        YWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAEAAPbWAAEAAAAA0y1IUCAgAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAzZGVzYwAAAYQAAABs
        d3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAU
        ZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAAA9QAAAAkbHVtaQAAA/gAAAAU
        bWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAAAgM
        dGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAAAAA
        AAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbM
        WFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABja
        WFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAA
        AAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3Bh
        Y2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2Ug
        LSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENv
        bmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRp
        b24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8u
        ABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA
        AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMAKAAt
        ADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCyALcAvADB
        AMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1
        AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZwJx
        AnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oDZgNyA34DigOWA6IDrgO6
        A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFSQVY
        BWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHPQdP
        B2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJEAklCToJTwlkCXkJjwmk
        CboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxc
        DHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96
        D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMD
        EyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6
        Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtj
        G4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBB
        IGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWX
        Jccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitp
        K50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6
        MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiM
        OMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i
        QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVHe0fA
        SAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAn
        UHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1ka
        WWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKc
        YvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV2yv
        bQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+HdW
        d7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKS
        gvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/45m
        js6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrV
        m0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfg
        qFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WK
        tgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPU
        xFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB
        00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT
        4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM
        8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+0ADEFkb2JlX0NN
        AAL/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwM
        DAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABCAKADASIAAhEBAxEB/90ABAAK/8QB
        PwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQ
        AAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFj
        czUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dX
        Z3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFy
        gpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaG
        lqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwDz2UpTJJKXlKUySSl5SlMkkpeUpTJJKXlKUySS
        l5SlMkkpeUpTJJKXlKUySSl5SlMkkpeUpTJJKf/Q88SSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSS
        UpJJJJSkkkklKSSSSU//0fPEkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP
        /9LzxJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJT//T88SWakkp0klmpJKd
        JJZqSSnSSWakkp0klmpJKdJJZqSSnSSWakkp0klmpJKdJJZqSSnSSWakkp//2f/bAEMAAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMDAwMDA//bAEMB
        AQEBAQEBAQEBAQICAQICAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDA//CABEIAgQE5wMBEQACEQEDEQH/xAAXAAEBAQEAAAAAAAAAAAAAAAAAAwQK/8QAFxABAQEBAAAA
        AAAAAAAAAAAAEwDQgP/EABQBAQAAAAAAAAAAAAAAAAAAAAD/xAAZEQADAQEBAAAAAAAAAAAAAAAxoeEA
        gND/xAAUEgEAAAAAAAAAAAAAAAAAAADQ/9oADAMBAAIQAxAAAADjvAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//9oACAECAAEFAMfd/9oACAEDAAEFAMfd/9oACAEB
        AAEFAOOkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
        kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
        kkkk47SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
        SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
        SSTEMP/aAAgBAgIGPwAfd//aAAgBAwIGPwAfd//aAAgBAQEGPwDjoOYOYOYOYOYOYOYOYOYOYOYOYOYO
        YOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYO
        YOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYO
        YOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYO
        YOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOYOcdhzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBz
        BzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBz
        BzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBz
        BzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBz
        BzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzBzxDD//Z
</value>
  </data>
  <data name="AjudaDet1ao3.Text" xml:space="preserve">
    <value>DETERMINANTE → 
A toda matriz quadrada (mesmo número de linhas e colunas) está associado um número ao qual damos o nome de determinante.
DET. DE MATRIZ 1 x 1: Neste caso, o determinante equivale ao único elemento da matriz.
DET. DE MATRIZ 2 x 2: Neste caso, o determinante será calculado a partir da diferença entre o produto dos elementos da diagonal principal e o produto dos elementos 
da diagonal secundária.
DET. DE MATRIZ 3 x 3: Neste caso, o determinante será calculado com o auxílio da Regra de Sarrus. Esta consiste em copiar as 2 primeiras colunas da matriz à direita da 3ª coluna, de modo que 
sejam obtida uma sequência de 5 colunas, somar os produtos das diagonais principais e subtrair os produtos das diagonais secundárias gerando o determinante da matriz. </value>
  </data>
  <data name="AjudaOposta.Text" xml:space="preserve">
    <value>MATRIZ OPOSTA →
O oposto de um número é o seu simétrico, ou seja, o oposto de 5 é -5, o posto de -2 é 2. Nesse mesmo sentido encontraremos o oposto de uma matriz. 
Dada uma matriz B = (bij)m x n, a sua matriz oposta será representada por –B. Isso significa que para encontrar o oposto de uma matriz basta tornar 
todos os elementos da matriz em seus opostos.</value>
  </data>
  <data name="AjudaTranspo.Text" xml:space="preserve">
    <value>MATRIZ TRANSPOSTA → 
Dada uma matriz A de ordem m x n, a matriz transposta dela será representada por At de ordem “invertida” n x m. Essa ordem invertida significa 
que para transformarmos uma matriz em matriz transposta, basta trocar os elementos das linhas pelo das colunas e vice-versa. Ou seja, os elementos da coluna 1 de A serão 
os elementos da linha 1 de At, os da linha 1 de A serão os da coluna 1 de At, assim por diante até toda matriz A ser transposta resultando na At.</value>
  </data>
  <data name="AjudaMatrizEscalar.Text" xml:space="preserve">
    <value>MULTIPLICAÇÃO POR ESCALAR → 
Dada uma matriz A = (aij)m x n, e um número real k, temos que k.A é uma matriz B = (bij)m x n, tal que bij = k.aij.
Em termos gerais, temos: k.A = (k.aij) m x n em que 1 ≤ i ≤ m e 1 ≤ j ≤ n.</value>
  </data>
  <data name="AjudaProdMatrizes.Text" xml:space="preserve">
    <value>MULTIPLICAÇÃO ENTRE MATRIZES → 
O produto das matrizes A = ( aij) m x p e B = ( bij) p x n é a matriz C = (cij) m x n em que cada elemento cij é obtido por meio da soma dos produtos dos elementos correspondentes 
da i-ésima linha de A pelos elementos da j-ésima coluna B. Vale salientar que a multiplicação entre matrizes só poderá ocorrer quando o número de linhas de uma for igual ao 
número de colunas.</value>
  </data>
  <data name="SubAjuda.Text" xml:space="preserve">
    <value>SUBTRAÇÃO → 
Dadas duas  matrizes  A = (aij) e  B = (bij) de ordem m x n, A + B resultará em uma matriz R com m linhas e n colunas, obtida por:  rij = aij - bij.
Ou seja, para que duas matrizes A e B possam ser subtraidas, ambas têm que ter a mesma ordem e neste caso, subtraimos os respectivos elementos
de cada matriz que ocupam a mesma posição.
</value>
  </data>
  <data name="SomaAjuda.Text" xml:space="preserve">
    <value>SOMA → 
Dadas duas  matrizes  A = (aij) e  B = (bij) de ordem m x n, A + B resultará em uma matriz S com m linhas e n colunas, obtida por:  sij = aij + bij. 
Ou seja, para que duas matrizes A e B possam ser somadas, se ambas têm que ter a mesma ordem e neste caso, somamos os respectivos elementos 
de cada matriz que ocupam a mesma posição.</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAwMEARNIWw5Cfp8YgZe/G7GizRzLos4czJjBGrSBpBaGT2QOSAgKAhYAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAAFQAAABsAAAAbAAAAGwAAABsAAAAbAAAAGwAAABsAAAAbAAAAGwAA
        ABsAAAAbAAAAGgAAARoyPwsviq8aiKrYH9u05iH6t+kh/7fqIP+36iD/t+kf/7TmHvur2h3gjbQYk0NV
        CzAAAAAGAAAAAAAAAAAAAAAAAAAABVpSQ0h5blilem5XtXpuVrR6bla0em5WtHpuVrR5bla0eW5WtHlu
        VrR5bla0eW1VtHhtVbR1aVO0d3ZFs5/GJMy26CH7uOoh/7fpIf+36SH/t+kh/7fpIP+36SD/t+kf/7fq
        H/+16B79os8bxV96EEEAAAAFBggBAAAAAABaU0UhiX1kyJGDZ/+Rg2f/kYNn/5GDZ/+Rg2f/kYNn/5CD
        Zv+Qgmb/kIJm/5CCZv+Pgmb/jYBl/4uCW/+mxDb/uOoj/7jqI/+46iL/uOoi/7fpIf+36SH/t+kh/7fp
        IP+36SD/t+kf/7fpH/+26R7/ptQbylt0DzMAAAABAAAAAHNpUzyOgmbrkINn/5CDZ/+Qg2f/kINn/5CD
        Z/+Qg2f/kINn/5CCZv+Qgmb/kIJm/4+BZf+JfWL/nrFA/7jqJP+46iT/uOoj/7jqI/+46iL/uOoi/7fp
        If+36SH/t+kh/7fpIf+36SD/t+kf/7fpH/+26R7/nskapSYvBxKXvhoAcmdRPo6CZuyRhGj/kINn/5CD
        Z/+Qg2f/kINn/4+CZv+Qgmb/kINn/5CDZ/+Qg2f/jX9l/4+OVf+z3iv/uesl/7nqJf+46iT/uOok/7jq
        I/+46iP/uOoi/7fpIf+36SH/t+kh/7fpIf+36SD/t+kf/7fpH/+y5B3xg6cWT///4AByaFI+j4Jn7JGE
        aP+RhGj/kYRo/5GEaP+ShWn/s6qY/6GXf/+Pgmb/kINn/5CDZ/+LfmT/nrBD/7nrJv+56ib/ueol/7nq
        Jf+46iT/t+oi/7fqIf+36iD/t+of/7fpH/+26R//t+kh/7fpIf+36SD/t+kf/7fpHv+izxubAAAACHJo
        Uz6PgmfskYRp/5GEaf+RhGn/kINn/5KFaf/Tz8b/samW/46BZP+Qg2f/kINn/4yBYf+ryzb/uuwm/7nq
        J/+56ib/ueol/7rqKv/D60z/xexS/8XsUf/F61H/xetQ/8PrTP+56Sj/t+kg/7fpIP+36SD/t+of/67e
        Hc5hexAdc2lTPpCDaOyShWn/koVp/5WIbf+jmYL/ppyG/9nVzv++t6n/o5mD/52Sev+Qg2j/j4he/7HY
        Mf+66yf/ueon/7nqJ/+56iX/ves1/93vqf/j78D/4+++/+Pvvv/j777/4O+x/77qOv+36R//t+kh/7fp
        IP+36SD/suMe5IOnFjRzaVM+kINp7JKFav+RhGn/npJ6/9XRyf/c2dP/6+rn/+Ph3P/c2dP/v7iq/5CC
        af+RjF3/tN0w/7rrKP+56ij/ueoo/7nqJ/+66ij/ves2/77rOP++6zf/ves3/73rNv+96zT/ueol/7fp
        If+36SH/t+kh/7fpIP+05R/tk7oZPnNpVD6RhGnsk4Zr/5OGa/+Uh23/mo51/5yReP/W0sr/uLCf/5mN
        c/+Xi3H/kYNp/5GKX/+z2jL/uuso/7rqKf+56ij/ueon/73qNf/b75//4fCz/+Dvsv/g77H/4O+y/9zu
        pf++6zn/t+og/7fpIf+36SH/t+kh/7TlIOaSuhwzc2lUPpGEauyThmv/k4Zr/5OGa/+ShWr/lIds/9PO
        xf+yqZf/kINo/5KFav+RhGn/joRj/67POf+77Cj/uuop/7rqKf+56ij/u+ov/8nsYv/M7Wv/zO1q/8zt
        af/M7Gn/yuxj/7vqLv+46iL/uOoi/7fpIf+36SH/s+Mh0IaoHRt0alU+koVq7JSHbP+Uh2z/lIds/5OG
        a/+Uh2z/qZ+K/56Sev+ShWr/k4Zr/5KFav+NgGf/pLdH/7vsKf+66in/uuop/7rqKf+56ij/uOol/7jq
        JP+46iP/uOoi/7jqIv+46iH/uOoj/7jqI/+46iL/t+kh/7fpIf+w3iOdLC4ZBHRqVT6ShWrslIds/5SH
        bP+Uh2z/lIds/5SHbP+Thmr/k4Zr/5OGa/+Thmv/k4Zr/4+Caf+Wl1n/uOMw/7rrKv+66in/uuop/7rq
        Kf+66in/ueoo/7nqJ/+56ib/ueom/7nqJf+46iT/uOok/7jqI/+46iL/tugi9KnVJU3T/yoAdWpWPpKG
        a+yViG3/lYht/5SHbP+Uh2z/lIds/5SHbP+Uh2z/lIds/5SHbP+Thmv/koVq/46CZv+ovkb/vOwr/7rq
        Kv+66ir/uuop/7rqKf+66in/ueoo/7nqJ/+56ib/ueom/7nqJf+46iT/uOoj/7nrIv+z4iWpiqoqC5zB
        KwB1a1Y+k4Zs7JWIbf+ViG3/lYht/5WIbf+ViGz/lIds/5SHbP+Uh2z/lIds/5SGa/+Thmv/kINp/4+J
        Xv+rzTj/vOwq/7rqKv+66in/uuop/7rqKf+56ij/ueoo/7nqJ/+56ib/ueol/7jqJP+57CP/rdYr84mi
        L0aiwDcADQ0JAHhuWz6Xi3LsmY10/5mNdP+ZjXT/mY10/5mNc/+ZjXP/mYxz/5iMcv+YjHL/mIxy/5iL
        cv+Xi3H/jIBq/3d3Sv+oyTf/vOwr/7vrKv+66in/uuop/7rqKf+56ij/ueon/7nqJv+56yX/uuwl/6rQ
        MP93fEDuTEM5N2deSQAAAAAAgXhoPqKXguylmoT/pJmE/6SZhP+kmYP/pJmD/6SZg/+kmYP/pJmD/6SY
        gv+jmIL/o5iC/6OYgv+aj3r/aF9Q/25sSf+XrT//tN4y/7vrK/+87Cn/u+wo/7vsKP+67Cf/uuwo/7Th
        Lf+Zszn/cW9F/2NZR+9RSTk3a2FMAAAAAACBeWk+o5iD7KWahf+lmoX/pZqF/6Wahf+lmoT/pZqE/6Wa
        hP+lmoT/pZqE/6SZg/+kmYP/pJmD/5uRe/9rYlH/ZVxM/2dfTP92d0n/jp9C/6C8O/+oyTj/qMo3/6G+
        Of+Qoj//d3pF/2ZeSP9mXEr/Z11K71NLOzdtY04AAAAAAIF5aT6imIPspZqF/6Wahf+lmoX/pZqF/6Wa
        hf+lmoX/pZqE/6WahP+lmoT/pZqE/6SZg/+lmoP/nJF8/2tiUf9nXkz/aF9N/2ZdTP9lXEz/Z15L/2li
        S/9pYkr/Zl5K/2RaSv9kW0n/aF5K/2lgTP9oXkrvU0s7N25jTgAAAAAAgXlpPqKYg+ylmoX/pZqF/6Wa
        hf+lmoX/pZqF/6Wahf+lmoX/pZqF/6WahP+lmoT/pZqE/6WahP+ckXz/a2JR/2ZeTP9oYE3/aF9N/2de
        TP9lXUr/Zl1L/2ZdS/9lXEn/Zl1J/2lfTP9qYEz/amBM/2heS+9TSzs3bmNOAAAAAACBeWk+opiD7KWa
        hf+lmoX/pZqF/6Wahf+lmoX/pZqF/6Wahf+lmoX/pZqF/6WahP+lmoT/pZqE/5yRfP9rYlH/Zl5M/2hf
        Tf9nXkz/dm5e/4yGeP9oX03/Zl1K/4iBc/98dGP/amFN/2thTf9qYEz/aF9L71NLPDduZE8AAAAAAIF5
        aT6imIPspZqF/6Wahf+lmoX/pJmD/6SZg/+kmYP/pJmD/6SYg/+kmYP/pZqE/6WahP+lmoT/nJJ8/2ti
        Uf9mXkz/aF9N/2ddS/+AeWr/0tDM/5qVif+Si3//1NLO/4yFdv9qYEz/a2FN/2pgTP9oX0vvU0s8N25k
        TwAAAAAAgXlpPqKYg+ylmoX/pZqF/6qfjP/Buqz/w72w/8O8sP/DvLD/w72w/7+4qv+onon/pZqE/6ab
        hP+ckn3/a2JR/2ZeTP9oX03/aF9N/2ddTP+MhXn/2tnW/97d2v+ZkoX/bGJO/2tiTv9rYU3/a2FN/2hf
        S+9TSzw3bmRPAAAAAACBeWk+opiD7KWahf+kmYT/raOQ/9PPxv/X1Mz/19PM/9fTzP/Y1M3/0MzD/6qg
        jP+lmoT/ppuF/52Sff9rYlH/Zl5M/2dfTf9nX03/Zl1M/42Hev/a2db/3tza/5uUh/9sYk7/a2JO/2ti
        Tv9rYU3/aF9L71NLPDduZE8AAAAAAIF5aT6imIPspZqF/6Wahf+lmoX/pZuG/6Wbhv+lm4b/pZuG/6Wb
        hv+lm4b/pZqF/6Wahf+mm4X/nZJ9/2tiUf9mXUz/Z19N/2VdS/+AeWv/0tDM/52Xi/+VjoD/1NLO/42G
        d/9qYEz/a2JO/2thTf9pX0vvU0s8N29kTwAAAAAAgXlpPqKYg+ylmoX/pZqF/6Wahf+lmoX/pZqF/6Wa
        hf+lmoX/pZqF/6Wahf+lmoX/pZqF/6abhf+dkn3/amJR/2VdTP9nX03/Zl5L/3hwX/+PiHr/b2VS/21j
        UP+LhHX/fnVk/2thTf9rYk7/a2FN/2lfS+9TSzw3b2RPAAAAAACBeWk+opiD7KWahf+lmoX/pZqF/6Wa
        hf+lmoX/pZqF/6Wahf+lmoX/pZqF/6Wahf+lmoX/ppuF/52Sff9qYlH/ZVxM/2deTf9qYk//bmVR/21k
        UP9uZVH/bmRR/2xiTv9sYk7/bGJO/2tiTv9rYU3/aV9L71RLPDdvZE8AAAAAAIR7az2jmIPspZqF/6Wa
        hf+lmoX/pZqF/6Wahf+lmoX/pZqF/6Wahf+lmoX/pZqF/6Wahf+mm4X/nZJ9/2piUf9lXEz/amJQ/29m
        U/9wZlP/b2ZS/25lUf9uZFH/bWRQ/21jT/9sYk7/a2JO/2thTf9pX0vvVk09NmxhTQAAAAAAkIh4LqSa
        heKlmoX/pZqF/6Wahf+lmoX/pZqF/6Wahf+lmoX/pZqF/6Wahf+lmoX/pZqF/6aahf+dkn3/aWJR/2hg
        Tv9wZ1P/cGdU/3BmU/9vZlL/bmVR/25kUf9tZFD/bWNP/2xiTv9rYk7/a2FN/2pgTOJbU0MnaF9NAAAA
        AAB9eG4HpZuIhKabh+2lmob0pZqG9KWahvSlmob0pZqG9KWahvSlmob0pZqG9KWahvSlmob0ppuG9J2T
        fvRuZlX0b2dU9HJpVvRxaFX0cWdU9HBnU/RvZlP0b2VS9G5lUvRuZFH0bWNQ9GxjUPRtY0/qa2JPgUxG
        PAZeV0gAAAAAAKObiwCXkIMLn5aGPJuSgUubkoFKm5KBSpuSgUqbkoFKm5KBSpuSgUqbkoFKm5KBSpuS
        gUqck4FKlIx6SnFpWUpvZ1dKb2hXSm9nV0pvZlZKbmZWSm5mVUptZVVKbWVUSmxkU0psY1NKa2NTS2tj
        UzlmX1AJbmdVAAAAAAAAAAAA//4AD4AAAAcAAAADAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAA4AAAAc=
</value>
  </data>
</root>